<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NOVA CTF</title><link>/</link><description>Recent content on NOVA CTF</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>CSAW 2020 - flask_caching</title><link>/posts/csaw2020writeup-flask_caching/</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><guid>/posts/csaw2020writeup-flask_caching/</guid><description>CSAW Qualifiers 2020 - flask_caching We were presented with a simple Flask server, we can see the code bellow (see the full code).
#!/usr/bin/env python3 from flask import Flask from flask import request, redirect from flask_caching import Cache from redis import Redis import jinja2 import os app = Flask(__name__) app.config[&amp;#39;CACHE_REDIS_HOST&amp;#39;] = &amp;#39;localhost&amp;#39; app.config[&amp;#39;DEBUG&amp;#39;] = False cache = Cache(app, config={&amp;#39;CACHE_TYPE&amp;#39;: &amp;#39;redis&amp;#39;}) redis = Redis(&amp;#39;localhost&amp;#39;) jinja_env = jinja2.Environment(autoescape=[&amp;#39;html&amp;#39;, &amp;#39;xml&amp;#39;]) @app.route(&amp;#39;/&amp;#39;, methods=[&amp;#39;GET&amp;#39;, &amp;#39;POST&amp;#39;]) def notes_post(): if request.</description></item><item><title>CSAW 2020 - modus_operandi</title><link>/posts/csaw2020-modus_operandi/</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><guid>/posts/csaw2020-modus_operandi/</guid><description>This is a crypto challenge from the CSAW 2020 CTF originally worth 150 points.
The challenge initially tells us to connect as such:
$ nc crypto.chal.csaw.io 5001 Hello! For each plaintext you enter, find out if the block cipher used is ECB or CBC. Enter &amp;quot;ECB&amp;quot; or &amp;quot;CBC&amp;quot; to get the flag! We need to tell if the cipher being used to encode our plaintext is ECB or CBC. The big difference is that ECB, which stands for Electronic Code Book, always produces the same ciphertext for a given block.</description></item><item><title>CSAW 2020 - slithery</title><link>/posts/csaw2020writeup-slithery/</link><pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate><guid>/posts/csaw2020writeup-slithery/</guid><description>Setting up a new coding environment for my data science students. Some of them are l33t h4ck3rs that got RCE and crashed my machine a few times :(. Can you help test this before I use it for my class? Two sandboxes should be better than one...
nc pwn.chal.csaw.io 5011
sandbox.py
Looking at the file it seems we have a very simple REPL, with some code prepended to every line we write.</description></item><item><title>Over The Wire - Bandit Walkthrough</title><link>/posts/otw-bandit_walkthrough/</link><pubDate>Thu, 26 Dec 2019 22:41:28 +0000</pubDate><guid>/posts/otw-bandit_walkthrough/</guid><description>Introduction Over The Wire provides multiple challenges focused on different topics of computer systems. The one which we will solve here is Bandit. This is focused on SSH communication, bash commands and some basic UNIX concepts.
To connect to any of these levels you need 2 things: a username, and a password. Each level has a username in the format bandit&amp;lt;level_number&amp;gt; (without the &amp;lsquo;&amp;lt;&amp;rsquo; &amp;lsquo;&amp;gt;') so for level 0 the username would be bandit0.</description></item><item><title>Over The Wire - Krypton Walkthrough</title><link>/posts/otw-krypton_walkthrough/</link><pubDate>Thu, 26 Dec 2019 22:41:28 +0000</pubDate><guid>/posts/otw-krypton_walkthrough/</guid><description>Introduction Over The Wire provides multiple challenges focused on different topics of computer systems. The one which we will solve here is Krypton. This is challenge is focused on cryptography.
You can read more about the challenge and how it works here.
Levels:
Level 0 Level 1 Level 2 Level 3 Level 4 Level 5 Level 6 Level 0 The password is a base64 encoded string. We can use the base64 command.</description></item><item><title>Santa's Message</title><link>/challenges/christmas_challenge/</link><pubDate>Sun, 10 Nov 2019 17:26:05 +0000</pubDate><guid>/challenges/christmas_challenge/</guid><description>Description It&amp;rsquo;s almost that time of the year and Santa needs to prepare himself for the busiest of nights. He surely can&amp;rsquo;t do it alone so he has to comunicate with his elfs and that&amp;rsquo;s where you come in!
Message We have intercepted this messages from one of Santa&amp;rsquo;s elfs, Evilio. We suspect there is something hidden in it. Download verification MD5 hash for integrity 9b4f299aa4006708870123ff926178ff
Now it&amp;rsquo;s up to you to find out what Evilio meant with this message&amp;hellip; If you find it please let us know ASAP, we don&amp;rsquo;t have much time.</description></item><item><title>About</title><link>/about/</link><pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate><guid>/about/</guid><description>Who are we? From Faculdade de CiÃªncias e Tecnologias da Universidade Nova de Lisboa, we started as a small group of people interested in developing their knowledge and skills in Cyber Security. Our interests lead us to the creation of this group.
Currently we organize activities every week where we solve various types of online challenges.
Objectives: Spread awareness. Develop knowledge and skills in the area. Promote activities related with Cyber Security.</description></item><item><title>Over The Wire - Leviathan Walkthrough</title><link>/posts/otw-leviathan_walkthrough/</link><pubDate>Sun, 31 Mar 2019 00:05:08 +0000</pubDate><guid>/posts/otw-leviathan_walkthrough/</guid><description>Level 0 Arriving at Level 0 we can use ls -l to print any files, however it prints:
total 0 So we should maybe use ls -la which should print:
total 24 drwxr-xr-x 3 root root 4096 Oct 29 21:17 . drwxr-xr-x 10 root root 4096 Oct 29 21:17 .. drwxr-x--- 2 leviathan1 leviathan0 4096 Oct 29 21:17 .backup -rw-r--r-- 1 root root 220 May 15 2017 .bash_logout -rw-r--r-- 1 root root 3526 May 15 2017 .</description></item></channel></rss>